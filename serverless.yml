service: bmi-results-sg
provider:
  name: aws
  runtime: python3.7
  region: eu-west-2
  package:
    individually: true
  deploymentBucket:
    name: com.serverless.${self:provider.region}.results.ons.deploys

custom:
  accounts: ${ssm:/aws/reference/secretsmanager/results-aws-accounts~true}
  accountId: ${self:custom.accounts.account-id}

  wranglers: ${ssm:/aws/reference/secretsmanager/results-bmi-sg-wranglers~true}
  ingest: ${self:custom.wranglers.ingest}
  enrichment: ${self:custom.wranglers.enrichment}
  strata: ${self:custom.wranglers.strata}
  imputation-movements: ${self:custom.wranglers.imputation-movements}
  imputation-means: ${self:custom.wranglers.imputation-means}
  imputation-iqrs: ${self:custom.wranglers.imputation-iqrs}
  imputation-atyps: ${self:custom.wranglers.imputation-atyps}
  imputation-recalc-means: ${self:custom.wranglers.imputation-recalc-means}
  imputation-calc-factors: ${self:custom.wranglers.imputation-calc-factors}
  imputation-apply-factors: ${self:custom.wranglers.imputation-apply-factors}
  aggregation-top2: ${self:custom.wranglers.aggregation-top2}
  aggregation-column: ${self:custom.wranglers.aggregation-column}
  aggregation-combiner: ${self:custom.wranglers.aggregation-combiner}
  disclosure-wrangler: ${self:custom.wranglers.disclosure-wrangler}
  all-gb-region: ${self:custom.wranglers.all-gb-region}
  error-capture: ${self:custom.wranglers.error-capture}
  method-return: ${self:custom.wranglers.method-return}

stepFunctions:
  stateMachines:
    ES-BMISG-Results:
        name: ES-BMISG-Results-lu4987
        tags:
            app: results
        definition:
          Comment: Calls the lambdas required to run the BMI Sand and Gravel Survey
          StartAt: Inputs
          States:

            Inputs:
              Next: Choice State
              Parameters:
                MessageStructure: json
                RuntimeVariables:
                  lookups.$: $.lookups
                  aggA.$: $.aggA
                  aggB.$: $.aggB
                  movement_type.$: $.movement_type
                  cell_total_column.$: $.cell_total_column
                  checkpoint.$: $.checkpoint
                  disclosivity_marker.$: $.disclosivity_marker
                  distinct_values.$: $.distinct_values
                  explanation.$: $.explanation
                  id.$: $.id
                  parent_column.$: $.parent_column
                  period.$: $.period
                  periodicity.$: $.periodicity
                  period_column.$: $.period_column
                  publishable_indicator.$: $.publishable_indicator
                  raw_input_file.$: $.raw_input_file
                  sum_columns.$: $.sum_columns
                  threshold.$: $.threshold
                  top1_column.$: $.top1_column
                  top2_column.$: $.top2_column
                  total_column.$: $.total_column
                  stage5_threshold.$: $.stage5_threshold
                  disclosure_stages.$: $.disclosure_stages
                  survey_column.$: $.survey_column
                  factors_parameters.$: $.factors_parameters
              Type: Pass

            Choice State:
              Choices:
              - Next: Ingest
                NumericEquals: 0
                Variable: $.RuntimeVariables.checkpoint
              - Next: Enrichment
                NumericEquals: 1
                Variable: $.RuntimeVariables.checkpoint
              - Next: Strata
                NumericEquals: 2
                Variable: $.RuntimeVariables.checkpoint
              - Next: Imputation Calculate Movements
                NumericEquals: 3
                Variable: $.RuntimeVariables.checkpoint
              - Next: Aggregation
                NumericEquals: 4
                Variable: $.RuntimeVariables.checkpoint
              - Next: Disclosure
                NumericEquals: 5
                Variable: $.RuntimeVariables.checkpoint
              Type: Choice

            Ingest:
              Next: Enrichment
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.ingest}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next : Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Enrichment:
              Next: Strata
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.enrichment}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Strata:
              Next: Imputation Calculate Movements
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.strata}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Imputation Calculate Movements:
              Next: Should Imputation Run
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-movements}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Should Imputation Run:
              Choices:
              - BooleanEquals: true
                Next: Calculate All-GB Region
                Variable: $.data.lambdaresult.impute
              - BooleanEquals: false
                Next: Success
                Variable: $.data.lambdaresult.impute
              Type: Choice

            Calculate All-GB Region:
              Next: Calculate Means
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.all-gb-region}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Calculate Means:
              Next: Calculate IQRS
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-means}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Calculate IQRS:
              Next: Calculate Atypicals
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-iqrs}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Calculate Atypicals:
              Next: Re-Calculate Means
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-atyps}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Re-Calculate Means:
              Next: Calculate Factors
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-recalc-means}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Calculate Factors:
              Next: Apply Factors
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-calc-factors}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Apply Factors:
              Next: Aggregation
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.imputation-apply-factors}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              Type: Task

            Aggregation:
              Type: Parallel
              Next: Combiner
              ResultPath: $
              OutputPath: $[0]
              Branches:
                - StartAt: passRuntime
                  States:
                    passRuntime:
                      Type: Pass
                      End: true
                - StartAt: County Total
                  States:
                    County Total:
                      Type: Task
                      InputPath: $.RuntimeVariables.aggA
                      Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.aggregation-column}"
                      End: true

                - StartAt: EntRef Count
                  States:
                    EntRef Count:
                      Type: Task
                      InputPath: $.RuntimeVariables.aggB
                      Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.aggregation-column}"
                      End: true

                - StartAt: Calculate Top2
                  States:
                    Calculate Top2:
                      Type: Task
                      InputPath: $.RuntimeVariables.aggA
                      Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.aggregation-top2}"
                      End: true

            Combiner:
              Next: Disclosure
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.aggregation-combiner}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              OutputPath: $
              Type: Task

            Disclosure:
              Next: Success
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.disclosure-wrangler}"
              Catch:
                - ErrorEquals: [States.ALL]
                  Next: Failure
              ResultPath: $.data.lambdaresult
              OutputPath: $
              Type: Task

            Success:
              End: true
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.method-return}"
              InputPath: $
              ResultPath: $.data.lambdaresult
              Type: Task

            Failure:
              End: true
              Resource: "arn:aws:lambda:eu-west-2:${self:custom.accountId}:function:${self:custom.error-capture}"
              InputPath: $
              ResultPath: $.data.lambdaresult
              Type: Task

plugins:
  - serverless-step-functions
